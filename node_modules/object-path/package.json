{
  "_args": [
    [
      {
        "raw": "object-path@^0.9.0",
        "scope": null,
        "escapedName": "object-path",
        "name": "object-path",
        "rawSpec": "^0.9.0",
        "spec": ">=0.9.0 <0.10.0",
        "type": "range"
      },
      "/home/nicolaas/hackathon/node_modules/tfunk"
    ]
  ],
  "_from": "object-path@>=0.9.0 <0.10.0",
  "_id": "object-path@0.9.2",
  "_inCache": true,
  "_location": "/object-path",
  "_npmUser": {
    "name": "mariocasciaro",
    "email": "contact@mariocasciaro.me"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "object-path@^0.9.0",
    "scope": null,
    "escapedName": "object-path",
    "name": "object-path",
    "rawSpec": "^0.9.0",
    "spec": ">=0.9.0 <0.10.0",
    "type": "range"
  },
  "_requiredBy": [
    "/tfunk"
  ],
  "_resolved": "https://registry.npmjs.org/object-path/-/object-path-0.9.2.tgz",
  "_shasum": "0fd9a74fc5fad1ae3968b586bda5c632bd6c05a5",
  "_shrinkwrap": null,
  "_spec": "object-path@^0.9.0",
  "_where": "/home/nicolaas/hackathon/node_modules/tfunk",
  "author": {
    "name": "Mario Casciaro"
  },
  "bugs": {
    "url": "https://github.com/mariocasciaro/object-path/issues"
  },
  "dependencies": {},
  "description": "Access deep properties using a path",
  "devDependencies": {
    "chai": "~1.9.1",
    "coveralls": "~2.11.1",
    "istanbul": "~0.3.0",
    "mocha": "~1.20.1",
    "mocha-lcov-reporter": "~0.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0fd9a74fc5fad1ae3968b586bda5c632bd6c05a5",
    "tarball": "https://registry.npmjs.org/object-path/-/object-path-0.9.2.tgz"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "gitHead": "3f1e4ea93b9eef77236f0a3dce73dfcf89c780c0",
  "homepage": "https://github.com/mariocasciaro/object-path",
  "keywords": [
    "deep",
    "path",
    "access",
    "bean",
    "get",
    "property",
    "dot",
    "prop",
    "object",
    "obj",
    "notation",
    "segment",
    "value",
    "nested",
    "key"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "mariocasciaro",
      "email": "mariocasciaro@gmail.com"
    }
  ],
  "name": "object-path",
  "optionalDependencies": {},
  "readme": "\n\nobject-path\n===========\n\nAccess deep properties using a path\n\n[![NPM version](https://badge.fury.io/js/object-path.png)](http://badge.fury.io/js/object-path)\n[![Build Status](https://travis-ci.org/mariocasciaro/object-path.png)](https://travis-ci.org/mariocasciaro/object-path)\n[![Coverage Status](https://coveralls.io/repos/mariocasciaro/object-path/badge.png)](https://coveralls.io/r/mariocasciaro/object-path)\n[![devDependency Status](https://david-dm.org/mariocasciaro/object-path/dev-status.svg)](https://david-dm.org/mariocasciaro/object-path#info=devDependencies)\n![Downloads](http://img.shields.io/npm/dm/object-path.svg)\n\n## Install\n\n### Node.js\n\n```\nnpm install object-path\n```\n\n### Browser\n\n```\nbower install object-path\n```\n\n### Typescript typings\n\n```\ntsd query object-path --action install --save\n```\n\n## Usage\n\n```javascript\n\nvar obj = {\n  a: {\n    b: \"d\",\n    c: [\"e\", \"f\"]\n  }\n};\n\nvar objectPath = require(\"object-path\");\n\n//get deep property\nobjectPath.get(obj, \"a.b\");  //returns \"d\"\n\n//get the first non-undefined value\nobjectPath.coalesce(obj, ['a.z', 'a.d', ['a','b']], 'default');\n\n//empty a given path (but do not delete it) depending on their type,so it retains reference to objects and arrays.\n//functions that are not inherited from prototype are set to null.\n//object instances are considered objects and just own property names are deleted\nobjectPath.empty(obj, 'a.b'); // obj.a.b is now ''\nobjectPath.empty(obj, 'a.c'); // obj.a.c is now []\nobjectPath.empty(obj, 'a'); // obj.a is now {}\n\n//works also with arrays\nobjectPath.get(obj, \"a.c.1\");  //returns \"f\"\nobjectPath.get(obj, [\"a\",\"c\",\"1\"]);  //returns \"f\"\n\n//can return a default value with get\nobjectPath.get(obj, [\"a.c.b\"], \"DEFAULT\");  //returns \"DEFAULT\", since a.c.b path doesn't exists, if omitted, returns undefined\n\n//set\nobjectPath.set(obj, \"a.h\", \"m\"); // or objectPath.set(obj, [\"a\",\"h\"], \"m\");\nobjectPath.get(obj, \"a.h\");  //returns \"m\"\n\n//set will create intermediate object/arrays\nobjectPath.set(obj, \"a.j.0.f\", \"m\");\n\n//will insert values in array\nobjectPath.insert(obj, \"a.c\", \"m\", 1); // obj.a.c = [\"e\", \"m\", \"f\"]\n\n//push into arrays (and create intermediate objects/arrays)\nobjectPath.push(obj, \"a.k\", \"o\");\n\n//ensure a path exists (if it doesn't, set the default value you provide)\nobjectPath.ensureExists(obj, \"a.k.1\", \"DEFAULT\");\n\n//deletes a path\nobjectPath.del(obj, \"a.b\"); // obj.a.b is now undefined\nobjectPath.del(obj, [\"a\",\"c\",0]); // obj.a.c is now ['f']\n\n//tests path existence\nobjectPath.has(obj, \"a.b\"); // true\nobjectPath.has(obj, [\"a\",\"d\"]); // false\n\n//bind object\nvar model = objectPath({\n  a: {\n    b: \"d\",\n    c: [\"e\", \"f\"]\n  }\n});\n\n//now any method from above is supported directly w/o passing an object\nmodel.get(\"a.b\");  //returns \"d\"\nmodel.get([\"a.c.b\"], \"DEFAULT\");  //returns \"DEFAULT\"\nmodel.del(\"a.b\"); // obj.a.b is now undefined\nmodel.has(\"a.b\"); // false\n\n```\n\n### Credits\n\n* [Mario Casciaro](https://github.com/mariocasciaro) - Author\n* [Paulo Cesar](https://github.com/pocesar) - Major contributor\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mariocasciaro/object-path.git"
  },
  "scripts": {
    "test": "node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha test.js --report html -- -R spec"
  },
  "version": "0.9.2"
}
